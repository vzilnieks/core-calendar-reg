{"version":3,"sources":["./src/app/master.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA2C;AAEE;AACX;AAGlC;IAOE;QALQ,YAAO,GAAa;YAC1B,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC;YAChD,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC;SACtD,CAAC;IAEc,CAAC;IAEV,iCAAS,GAAhB;QACE,MAAM,CAAC,mEAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IAEM,qCAAa,GAApB,UAAqB,QAAgB;QACnC,IAAI,UAAkB,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;YACzB,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;YAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAEM,iCAAS,GAAhB,UAAiB,IAAY;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,CAAE,CAAC;IAC3E,CAAC;IAEM,oCAAY,GAAnB,UAAoB,QAAgB,EAAE,IAAc;QAClD,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,EAAE,KAAK,QAAQ,EAAnB,CAAmB,CAAC,CAAC;QACrE,WAAW;QACX,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;IAC/C,CAAC;IAEM,oCAAY,GAAnB,UAAoB,QAAgB;QAClC,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,EAAE,KAAK,QAAQ,EAAnB,CAAmB,CAAC,CAAC;QACrE,WAAW;QACX,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IApCU,aAAa;QADzB,yEAAU,EAAE;;OACA,aAAa,CAsCzB;IAAD,oBAAC;CAAA;AAtCyB","file":"common.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Master } from './shared/classes/master';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/from';\n\n@Injectable()\nexport class MasterService {\n\n  private masters: Master[] = [\n    {id: 1, name: \"John Smith\", workingDays: [1, 2]},\n    {id: 2, name: \"Andrew Black\", workingDays: [2, 3, 6]}\n  ];\n\n  constructor() { }\n\n  public getMaster(): Observable<Master> {\n    return Observable.from(this.masters);\n  }\n\n  public getMasterName(masterId: number): string {\n    let masterName: string;\n    this.masters.forEach(master => {\n      if (master.id === masterId) { masterName = master.name; }\n    });\n    return masterName;\n  }\n\n  public addMaster(name: string) {\n    this.masters.push( \n      { id: Math.floor(Math.random() * 100), name: name, workingDays: [] } );\n  }\n\n  public updateMaster(masterId: number, days: number[]) {\n    let masterIndex = this.masters.findIndex(arr => arr.id === masterId);\n    // TODO: db\n    this.masters[masterIndex].workingDays = days;\n  }\n\n  public deleteMaster(masterId: number) {\n    let masterIndex = this.masters.findIndex(arr => arr.id === masterId);\n    // TODO: db\n    this.masters.splice(masterIndex, 1);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/master.service.ts"],"sourceRoot":"webpack:///"}